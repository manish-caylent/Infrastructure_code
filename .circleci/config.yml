version: 2.1
orbs:
  gh: circleci/github-cli@2.0
jobs: 
  plan:
    docker: 
      - image: alpine/terragrunt
    steps:
      - checkout
      - run:
          name: terragrunt plan
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging" ];
            then 
              AWS_ACCESS_KEY_ID=${STAGING_AWS_ACCESS_KEY_ID}
              AWS_SECRET_ACCESS_KEY=${STAGING_AWS_SECRET_ACCESS_KEY}
              cd deployments/us-west-2/staging
              terragrunt run-all plan --terragrunt-non-interactive
            fi
            if [ "${CIRCLE_BRANCH}" == "prod" ];
            then 
              AWS_ACCESS_KEY_ID=${PROD_AWS_ACCESS_KEY_ID}
              AWS_SECRET_ACCESS_KEY=${PROD_AWS_SECRET_ACCESS_KEY}
              cd deployments/us-west-2/prod 
              terragrunt run-all plan --terragrunt-non-interactive
            fi
      - persist_to_workspace: 
          root: .
          paths:
            - .       
  apply:
    docker: 
      - image: alpine/terragrunt
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terragrunt apply
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging" ];
            then 
              AWS_ACCESS_KEY_ID=${STAGING_AWS_ACCESS_KEY_ID}
              AWS_SECRET_ACCESS_KEY=${STAGING_AWS_SECRET_ACCESS_KEY}
              cd deployments/us-west-2/staging
              terragrunt run-all apply -auto-approve --terragrunt-non-interactive
            fi
            if [ "${CIRCLE_BRANCH}" == "prod" ];
            then 
              AWS_ACCESS_KEY_ID=${PROD_AWS_ACCESS_KEY_ID}
              AWS_SECRET_ACCESS_KEY=${PROD_AWS_SECRET_ACCESS_KEY}
              cd deployments/us-west-2/prod 
              terragrunt run-all apply -auto-approve --terragrunt-non-interactive
            fi
      - persist_to_workspace:
          root: .
          paths: 
            - .
    
workflows:
  version: 2
  plan_release:
    jobs:
      - plan
      - gh/release:
          notes-file: changelog.md
          tag: v1.0.0
          title: Updated tag
          requires:
            - plan
          context:
            - GITHUB_CREDS
          filters:
            branches:
              only:
                - main
      - hold_apply:
          type: approval
          requires:
            - plan
          filters:
            branches:
              only:
                - main
      - apply:
          requires:
            - hold_apply


   